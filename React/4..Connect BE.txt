//// FETCH API, HANDLE ERROR, DISPLAY LOADING SPINNER
GET
- send Http request khi nhận 1 event
  const Component = () => {
    const [data, setData] = useState([]);
    const [isLoading, setIsLoading] = useState(false);
    const [error, setError] = useState(null);

    const fetchDataHandler = async () => {
      setIsLoading(true);
      setError(null);
      
      try {
        const res = await fetch('URL');
        const status = res.status.toString();
        if (status.startsWith('4') || status.startsWith('5'))  
          throw New Error('Something went wrong!');
        
        const dt = await res.json();
        setData(dt.results.map((data) => {
            return { id: data.id, name: data.name,};
          }));
      } catch(error){
        setError(error.message);
      }
      setIsLoading(false);
    }
    
    let content = <p>Data not found.</p>;
    if (data.length > 0) content = <ShowData data={data} />
    if (error) content = <p>{error}</p>;
    if (isLoading) content = <LoadingSpinner />;
    
    return (
      <Fragment>
        <section>
          <button onClick={fetchDataHandler}>Fetch data</button>
        </section>
        </section>{content}</section>
      </Fragment>
    );
  } 
-send Http request khi mounted component
 useEffect(() => {
   fetchDataHandler();
 }, [])
-send Http request khi state change: đưa state vào [deps], thường là props

POST
  async function addDataHandler(data) {
    const response = await fetch('URL', {
      method: 'POST',
      body: JSON.stringify(data),
      headers: {
        'Content-type': 'application/json',
      }
    });
    const data = await response.json();
  }

https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch

///// AXIOS
  > npm i axios
https://axios-http.com/docs/intro




















  